[33mcommit cb54029043c50e94c248c6e5b9a832ec9dfd596c[m[33m ([m[1;36mHEAD -> [m[1;32mmaster[m[33m)[m
Author: Hossein Manafi <hossein.manafi@gmail.com>
Date:   Mon Mar 16 10:55:35 2020 +0100

    add new files

[1mdiff --git a/css/style.css b/css/style.css[m
[1mnew file mode 100644[m
[1mindex 0000000..c21bda0[m
[1m--- /dev/null[m
[1m+++ b/css/style.css[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mbody{[m
[32m+[m[32m  background: red;[m
[32m+[m[32m  margin: 100px;[m
[32m+[m[32m}[m

[33mcommit 3dd6aca60311cfa4304152275e05c0f8fa55af74[m
Author: Hossein Manafi <hossein.manafi@gmail.com>
Date:   Mon Mar 16 10:52:02 2020 +0100

    delete files

[1mdiff --git a/ablut.html b/ablut.html[m
[1mindex f5e8b42..be09e28 100644[m
[1m--- a/ablut.html[m
[1m+++ b/ablut.html[m
[36m@@ -6,6 +6,6 @@[m
   </head>[m
   <body>[m
     <h1> Hello </h1>[m
[31m-[m
[32m+[m[32m  <p>Hello to my world</p>[m
   </body>[m
 </html>[m
[1mdiff --git a/jpa-in-10-steps/.gitignore b/jpa-in-10-steps/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex a2a3040..0000000[m
[1m--- a/jpa-in-10-steps/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,31 +0,0 @@[m
[31m-HELP.md[m
[31m-target/[m
[31m-!.mvn/wrapper/maven-wrapper.jar[m
[31m-!**/src/main/**[m
[31m-!**/src/test/**[m
[31m-[m
[31m-### STS ###[m
[31m-.apt_generated[m
[31m-.classpath[m
[31m-.factorypath[m
[31m-.project[m
[31m-.settings[m
[31m-.springBeans[m
[31m-.sts4-cache[m
[31m-[m
[31m-### IntelliJ IDEA ###[m
[31m-.idea[m
[31m-*.iws[m
[31m-*.iml[m
[31m-*.ipr[m
[31m-[m
[31m-### NetBeans ###[m
[31m-/nbproject/private/[m
[31m-/nbbuild/[m
[31m-/dist/[m
[31m-/nbdist/[m
[31m-/.nb-gradle/[m
[31m-build/[m
[31m-[m
[31m-### VS Code ###[m
[31m-.vscode/[m
[1mdiff --git a/jpa-in-10-steps/.mvn/wrapper/MavenWrapperDownloader.java b/jpa-in-10-steps/.mvn/wrapper/MavenWrapperDownloader.java[m
[1mdeleted file mode 100644[m
[1mindex e76d1f3..0000000[m
[1m--- a/jpa-in-10-steps/.mvn/wrapper/MavenWrapperDownloader.java[m
[1m+++ /dev/null[m
[36m@@ -1,117 +0,0 @@[m
[31m-/*[m
[31m- * Copyright 2007-present the original author or authors.[m
[31m- *[m
[31m- * Licensed under the Apache License, Version 2.0 (the "License");[m
[31m- * you may not use this file except in compliance with the License.[m
[31m- * You may obtain a copy of the License at[m
[31m- *[m
[31m- *      https://www.apache.org/licenses/LICENSE-2.0[m
[31m- *[m
[31m- * Unless required by applicable law or agreed to in writing, software[m
[31m- * distributed under the License is distributed on an "AS IS" BASIS,[m
[31m- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.[m
[31m- * See the License for the specific language governing permissions and[m
[31m- * limitations under the License.[m
[31m- */[m
[31m-import java.net.*;[m
[31m-import java.io.*;[m
[31m-import java.nio.channels.*;[m
[31m-import java.util.Properties;[m
[31m-[m
[31m-public class MavenWrapperDownloader {[m
[31m-[m
[31m-    private static final String WRAPPER_VERSION = "0.5.6";[m
[31m-    /**[m
[31m-     * Default URL to download the maven-wrapper.jar from, if no 'downloadUrl' is provided.[m
[31m-     */[m
[31m-    private static final String DEFAULT_DOWNLOAD_URL = "https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/"[m
[31m-        + WRAPPER_VERSION + "/maven-wrapper-" + WRAPPER_VERSION + ".jar";[m
[31m-[m
[31m-    /**[m
[31m-     * Path to the maven-wrapper.properties file, which might contain a downloadUrl property to[m
[31m-     * use instead of the default one.[m
[31m-     */[m
[31m-    private static final String MAVEN_WRAPPER_PROPERTIES_PATH =[m
[31m-            ".mvn/wrapper/maven-wrapper.properties";[m
[31m-[m
[31m-    /**[m
[31m-     * Path where the maven-wrapper.jar will be saved to.[m
[31m-     */[m
[31m-    private static final String MAVEN_WRAPPER_JAR_PATH =[m
[31m-            ".mvn/wrapper/maven-wrapper.jar";[m
[31m-[m
[31m-    /**[m
[31m-     * Name of the property which should be used to override the default download url for the wrapper.[m
[31m-     */[m
[31m-    private static final String PROPERTY_NAME_WRAPPER_URL = "wrapperUrl";[m
[31m-[m
[31m-    public static void main(String args[]) {[m
[31m-        System.out.println("- Downloader started");[m
[31m-        File baseDirectory = new File(args[0]);[m
[31m-        System.out.println("- Using base directory: " + baseDirectory.getAbsolutePath());[m
[31m-[m
[31m-        // If the maven-wrapper.properties exists, read it and check if it contains a custom[m
[31m-        // wrapperUrl parameter.[m
[31m-        File mavenWrapperPropertyFile = new File(baseDirectory, MAVEN_WRAPPER_PROPERTIES_PATH);[m
[31m-        String url = DEFAULT_DOWNLOAD_URL;[m
[31m-        if(mavenWrapperPropertyFile.exists()) {[m
[31m-            FileInputStream mavenWrapperPropertyFileInputStream = null;[m
[31m-            try {[m
[31m-                mavenWrapperPropertyFileInputStream = new FileInputStream(mavenWrapperPropertyFile);[m
[31m-                Properties mavenWrapperProperties = new Properties();[m
[31m-                mavenWrapperProperties.load(mavenWrapperPropertyFileInputStream);[m
[31m-                url = mavenWrapperProperties.getProperty(PROPERTY_NAME_WRAPPER_URL, url);[m
[31m-            } catch (IOException e) {[m
[31m-                System.out.println("- ERROR loading '" + MAVEN_WRAPPER_PROPERTIES_PATH + "'");[m
[31m-            } finally {[m
[31m-                try {[m
[31m-                    if(mavenWrapperPropertyFileInputStream != null) {[m
[31m-                        mavenWrapperPropertyFileInputStream.close();[m
[31m-                    }[m
[31m-                } catch (IOException e) {[m
[31m-                    // Ignore ...[m
[31m-                }[m
[31m-            }[m
[31m-        }[m
[31m-        System.out.println("- Downloading from: " + url);[m
[31m-[m
[31m-        File outputFile = new File(baseDirectory.getAbsolutePath(), MAVEN_WRAPPER_JAR_PATH);[m
[31m-        if(!outputFile.getParentFile().exists()) {[m
[31m-            if(!outputFile.getParentFile().mkdirs()) {[m
[31m-                System.out.println([m
[31m-                        "- ERROR creating output directory '" + outputFile.getParentFile().getAbsolutePath() + "'");[m
[31m-            }[m
[31m-        }[m
[31m-        System.out.println("- Downloading to: " + outputFile.getAbsolutePath());[m
[31m-        try {[m
[31m-            downloadFileFromURL(url, outputFile);[m
[31m-            System.out.println("Done");[m
[31m-            System.exit(0);[m
[31m-        } catch (Throwable e) {[m
[31m-            System.out.println("- Error downloading");[m
[31m-            e.printStackTrace();[m
[31m-            System.exit(1);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    private static void downloadFileFromURL(String urlString, File destination) throws Exception {[m
[31m-        if (System.getenv("MVNW_USERNAME") != null && System.getenv("MVNW_PASSWORD") != null) {[m
[31m-            String username = System.getenv("MVNW_USERNAME");[m
[31m-            char[] password = System.getenv("MVNW_PASSWORD").toCharArray();[m
[31m-            Authenticator.setDefault(new Authenticator() {[m
[31m-                @Override[m
[31m-                protected PasswordAuthentication getPasswordAuthentication() {[m
[31m-                    return new PasswordAuthentication(username, password);[m
[31m-                }[m
[31m-            });[m
[31m-        }[m
[31m-        URL website = new URL(urlString);[m
[31m-        ReadableByteChannel rbc;[m
[31m-        rbc = Channels.newChannel(website.openStream());[m
[31m-        FileOutputStream fos = new FileOutputStream(destination);[m
[31m-        fos.getChannel().transferFrom(rbc, 0, Long.MAX_VALUE);[m
[31m-        fos.close();[m
[31m-        rbc.close();[m
[31m-    }[m
[31m-[m
[31m-}[m
[1mdiff --git a/jpa-in-10-steps/.mvn/wrapper/maven-wrapper.jar b/jpa-in-10-steps/.mvn/wrapper/maven-wrapper.jar[m
[1mdeleted file mode 100644[m
[1mindex 2cc7d4a..0000000[m
Binary files a/jpa-in-10-steps/.mvn/wrapper/maven-wrapper.jar and /dev/null differ
[1mdiff --git a/jpa-in-10-steps/.mvn/wrapper/maven-wrapper.properties b/jpa-in-10-steps/.mvn/wrapper/maven-wrapper.properties[m
[1mdeleted file mode 100644[m
[1mindex 642d572..0000000[m
[1m--- a/jpa-in-10-steps/.mvn/wrapper/maven-wrapper.properties[m
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m-distributionUrl=https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.6.3/apache-maven-3.6.3-bin.zip[m
[31m-wrapperUrl=https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar[m
[1mdiff --git a/jpa-in-10-steps/mvnw b/jpa-in-10-steps/mvnw[m
[1mdeleted file mode 100644[m
[1mindex a16b543..0000000[m
[1m--- a/jpa-in-10-steps/mvnw[m
[1m+++ /dev/null[m
[36m@@ -1,310 +0,0 @@[m
[31m-#!/bin/sh[m
[31m-# ----------------------------------------------------------------------------[m
[31m-# Licensed to the Apache Software Foundation (ASF) under one[m
[31m-# or more contributor license agreements.  See the NOTICE file[m
[31m-# distributed with this work for additional information[m
[31m-# regarding copyright ownership.  The ASF licenses this file[m
[31m-# to you under the Apache License, Version 2.0 (the[m
[31m-# "License"); you may not use this file except in compliance[m
[31m-# with the License.  You may obtain a copy of the License at[m
[31m-#[m
[31m-#    https://www.apache.org/licenses/LICENSE-2.0[m
[31m-#[m
[31m-# Unless required by applicable law or agreed to in writing,[m
[31m-# software distributed under the License is distributed on an[m
[31m-# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[31m-# KIND, either express or implied.  See the License for the[m
[31m-# specific language governing permissions and limitations[m
[31m-# under the License.[m
[31m-# ----------------------------------------------------------------------------[m
[31m-[m
[31m-# ----------------------------------------------------------------------------[m
[31m-# Maven Start Up Batch script[m
[31m-#[m
[31m-# Required ENV vars:[m
[31m-# ------------------[m
[31m-#   JAVA_HOME - location of a JDK home dir[m
[31m-#[m
[31m-# Optional ENV vars[m
[31m-# -----------------[m
[31m-#   M2_HOME - location of maven2's installed home dir[m
[31m-#   MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[31m-#     e.g. to debug Maven itself, use[m
[31m-#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[31m-#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[31m-# ----------------------------------------------------------------------------[m
[31m-[m
[31m-if [ -z "$MAVEN_SKIP_RC" ] ; then[m
[31m-[m
[31m-  if [ -f /etc/mavenrc ] ; then[m
[31m-    . /etc/mavenrc[m
[31m-  fi[m
[31m-[m
[31m-  if [ -f "$HOME/.mavenrc" ] ; then[m
[31m-    . "$HOME/.mavenrc"[m
[31m-  fi[m
[31m-[m
[31m-fi[m
[31m-[m
[31m-# OS specific support.  $var _must_ be set to either true or false.[m
[31m-cygwin=false;[m
[31m-darwin=false;[m
[31m-mingw=false[m
[31m-case "`uname`" in[m
[31m-  CYGWIN*) cygwin=true ;;[m
[31m-  MINGW*) mingw=true;;[m
[31m-  Darwin*) darwin=true[m
[31m-    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home[m
[31m-    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html[m
[31m-    if [ -z "$JAVA_HOME" ]; then[m
[31m-      if [ -x "/usr/libexec/java_home" ]; then[m
[31m-        export JAVA_HOME="`/usr/libexec/java_home`"[m
[31m-      else[m
[31m-        export JAVA_HOME="/Library/Java/Home"[m
[31m-      fi[m
[31m-    fi[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-if [ -z "$JAVA_HOME" ] ; then[m
[31m-  if [ -r /etc/gentoo-release ] ; then[m
[31m-    JAVA_HOME=`java-config --jre-home`[m
[31m-  fi[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$M2_HOME" ] ; then[m
[31m-  ## resolve links - $0 may be a link to maven's home[m
[31m-  PRG="$0"[m
[31m-[m
[31m-  # need this for relative symlinks[m
[31m-  while [ -h "$PRG" ] ; do[m
[31m-    ls=`ls -ld "$PRG"`[m
[31m-    link=`expr "$ls" : '.*-> \(.*\)$'`[m
[31m-    if expr "$link" : '/.*' > /dev/null; then[m
[31m-      PRG="$link"[m
[31m-    else[m
[31m-      PRG="`dirname "$PRG"`/$link"[m
[31m-    fi[m
[31m-  done[m
[31m-[m
[31m-  saveddir=`pwd`[m
[31m-[m
[31m-  M2_HOME=`dirname "$PRG"`/..[m
[31m-[m
[31m-  # make it fully qualified[m
[31m-  M2_HOME=`cd "$M2_HOME" && pwd`[m
[31m-[m
[31m-  cd "$saveddir"[m
[31m-  # echo Using m2 at $M2_HOME[m
[31m-fi[m
[31m-[m
[31m-# For Cygwin, ensure paths are in UNIX format before anything is touched[m
[31m-if $cygwin ; then[m
[31m-  [ -n "$M2_HOME" ] &&[m
[31m-    M2_HOME=`cygpath --unix "$M2_HOME"`[m
[31m-  [ -n "$JAVA_HOME" ] &&[m
[31m-    JAVA_HOME=`cygpath --unix "$JAVA_HOME"`[m
[31m-  [ -n "$CLASSPATH" ] &&[m
[31m-    CLASSPATH=`cygpath --path --unix "$CLASSPATH"`[m
[31m-fi[m
[31m-[m
[31m-# For Mingw, ensure paths are in UNIX format before anything is touched[m
[31m-if $mingw ; then[m
[31m-  [ -n "$M2_HOME" ] &&[m
[31m-    M2_HOME="`(cd "$M2_HOME"; pwd)`"[m
[31m-  [ -n "$JAVA_HOME" ] &&[m
[31m-    JAVA_HOME="`(cd "$JAVA_HOME"; pwd)`"[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$JAVA_HOME" ]; then[m
[31m-  javaExecutable="`which javac`"[m
[31m-  if [ -n "$javaExecutable" ] && ! [ "`expr \"$javaExecutable\" : '\([^ ]*\)'`" = "no" ]; then[m
[31m-    # readlink(1) is not available as standard on Solaris 10.[m
[31m-    readLink=`which readlink`[m
[31m-    if [ ! `expr "$readLink" : '\([^ ]*\)'` = "no" ]; then[m
[31m-      if $darwin ; then[m
[31m-        javaHome="`dirname \"$javaExecutable\"`"[m
[31m-        javaExecutable="`cd \"$javaHome\" && pwd -P`/javac"[m
[31m-      else[m
[31m-        javaExecutable="`readlink -f \"$javaExecutable\"`"[m
[31m-      fi[m
[31m-      javaHome="`dirname \"$javaExecutable\"`"[m
[31m-      javaHome=`expr "$javaHome" : '\(.*\)/bin'`[m
[31m-      JAVA_HOME="$javaHome"[m
[31m-      export JAVA_HOME[m
[31m-    fi[m
[31m-  fi[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$JAVACMD" ] ; then[m
[31m-  if [ -n "$JAVA_HOME"  ] ; then[m
[31m-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then[m
[31m-      # IBM's JDK on AIX uses strange locations for the executables[m
[31m-      JAVACMD="$JAVA_HOME/jre/sh/java"[m
[31m-    else[m
[31m-      JAVACMD="$JAVA_HOME/bin/java"[m
[31m-    fi[m
[31m-  else[m
[31m-    JAVACMD="`which java`"[m
[31m-  fi[m
[31m-fi[m
[31m-[m
[31m-if [ ! -x "$JAVACMD" ] ; then[m
[31m-  echo "Error: JAVA_HOME is not defined correctly." >&2[m
[31m-  echo "  We cannot execute $JAVACMD" >&2[m
[31m-  exit 1[m
[31m-fi[m
[31m-[m
[31m-if [ -z "$JAVA_HOME" ] ; then[m
[31m-  echo "Warning: JAVA_HOME environment variable is not set."[m
[31m-fi[m
[31m-[m
[31m-CLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher[m
[31m-[m
[31m-# traverses directory structure from process work directory to filesystem root[m
[31m-# first directory with .mvn subdirectory is considered project base directory[m
[31m-find_maven_basedir() {[m
[31m-[m
[31m-  if [ -z "$1" ][m
[31m-  then[m
[31m-    echo "Path not specified to find_maven_basedir"[m
[31m-    return 1[m
[31m-  fi[m
[31m-[m
[31m-  basedir="$1"[m
[31m-  wdir="$1"[m
[31m-  while [ "$wdir" != '/' ] ; do[m
[31m-    if [ -d "$wdir"/.mvn ] ; then[m
[31m-      basedir=$wdir[m
[31m-      break[m
[31m-    fi[m
[31m-    # workaround for JBEAP-8937 (on Solaris 10/Sparc)[m
[31m-    if [ -d "${wdir}" ]; then[m
[31m-      wdir=`cd "$wdir/.."; pwd`[m
[31m-    fi[m
[31m-    # end of workaround[m
[31m-  done[m
[31m-  echo "${basedir}"[m
[31m-}[m
[31m-[m
[31m-# concatenates all lines of a file[m
[31m-concat_lines() {[m
[31m-  if [ -f "$1" ]; then[m
[31m-    echo "$(tr -s '\n' ' ' < "$1")"[m
[31m-  fi[m
[31m-}[m
[31m-[m
[31m-BASE_DIR=`find_maven_basedir "$(pwd)"`[m
[31m-if [ -z "$BASE_DIR" ]; then[m
[31m-  exit 1;[m
[31m-fi[m
[31m-[m
[31m-##########################################################################################[m
[31m-# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central[m
[31m-# This allows using the maven wrapper in projects that prohibit checking in binary data.[m
[31m-##########################################################################################[m
[31m-if [ -r "$BASE_DIR/.mvn/wrapper/maven-wrapper.jar" ]; then[m
[31m-    if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-      echo "Found .mvn/wrapper/maven-wrapper.jar"[m
[31m-    fi[m
[31m-else[m
[31m-    if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-      echo "Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ..."[m
[31m-    fi[m
[31m-    if [ -n "$MVNW_REPOURL" ]; then[m
[31m-      jarUrl="$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"[m
[31m-    else[m
[31m-      jarUrl="https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar"[m
[31m-    fi[m
[31m-    while IFS="=" read key value; do[m
[31m-      case "$key" in (wrapperUrl) jarUrl="$value"; break ;;[m
[31m-      esac[m
[31m-    done < "$BASE_DIR/.mvn/wrapper/maven-wrapper.properties"[m
[31m-    if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-      echo "Downloading from: $jarUrl"[m
[31m-    fi[m
[31m-    wrapperJarPath="$BASE_DIR/.mvn/wrapper/maven-wrapper.jar"[m
[31m-    if $cygwin; then[m
[31m-      wrapperJarPath=`cygpath --path --windows "$wrapperJarPath"`[m
[31m-    fi[m
[31m-[m
[31m-    if command -v wget > /dev/null; then[m
[31m-        if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-          echo "Found wget ... using wget"[m
[31m-        fi[m
[31m-        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then[m
[31m-            wget "$jarUrl" -O "$wrapperJarPath"[m
[31m-        else[m
[31m-            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD "$jarUrl" -O "$wrapperJarPath"[m
[31m-        fi[m
[31m-    elif command -v curl > /dev/null; then[m
[31m-        if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-          echo "Found curl ... using curl"[m
[31m-        fi[m
[31m-        if [ -z "$MVNW_USERNAME" ] || [ -z "$MVNW_PASSWORD" ]; then[m
[31m-            curl -o "$wrapperJarPath" "$jarUrl" -f[m
[31m-        else[m
[31m-            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o "$wrapperJarPath" "$jarUrl" -f[m
[31m-        fi[m
[31m-[m
[31m-    else[m
[31m-        if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-          echo "Falling back to using Java to download"[m
[31m-        fi[m
[31m-        javaClass="$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java"[m
[31m-        # For Cygwin, switch paths to Windows format before running javac[m
[31m-        if $cygwin; then[m
[31m-          javaClass=`cygpath --path --windows "$javaClass"`[m
[31m-        fi[m
[31m-        if [ -e "$javaClass" ]; then[m
[31m-            if [ ! -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then[m
[31m-                if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-                  echo " - Compiling MavenWrapperDownloader.java ..."[m
[31m-                fi[m
[31m-                # Compiling the Java class[m
[31m-                ("$JAVA_HOME/bin/javac" "$javaClass")[m
[31m-            fi[m
[31m-            if [ -e "$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class" ]; then[m
[31m-                # Running the downloader[m
[31m-                if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-                  echo " - Running MavenWrapperDownloader.java ..."[m
[31m-                fi[m
[31m-                ("$JAVA_HOME/bin/java" -cp .mvn/wrapper MavenWrapperDownloader "$MAVEN_PROJECTBASEDIR")[m
[31m-            fi[m
[31m-        fi[m
[31m-    fi[m
[31m-fi[m
[31m-##########################################################################################[m
[31m-# End of extension[m
[31m-##########################################################################################[m
[31m-[m
[31m-export MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-"$BASE_DIR"}[m
[31m-if [ "$MVNW_VERBOSE" = true ]; then[m
[31m-  echo $MAVEN_PROJECTBASEDIR[m
[31m-fi[m
[31m-MAVEN_OPTS="$(concat_lines "$MAVEN_PROJECTBASEDIR/.mvn/jvm.config") $MAVEN_OPTS"[m
[31m-[m
[31m-# For Cygwin, switch paths to Windows format before running java[m
[31m-if $cygwin; then[m
[31m-  [ -n "$M2_HOME" ] &&[m
[31m-    M2_HOME=`cygpath --path --windows "$M2_HOME"`[m
[31m-  [ -n "$JAVA_HOME" ] &&[m
[31m-    JAVA_HOME=`cygpath --path --windows "$JAVA_HOME"`[m
[31m-  [ -n "$CLASSPATH" ] &&[m
[31m-    CLASSPATH=`cygpath --path --windows "$CLASSPATH"`[m
[31m-  [ -n "$MAVEN_PROJECTBASEDIR" ] &&[m
[31m-    MAVEN_PROJECTBASEDIR=`cygpath --path --windows "$MAVEN_PROJECTBASEDIR"`[m
[31m-fi[m
[31m-[m
[31m-# Provide a "standardized" way to retrieve the CLI args that will[m
[31m-# work with both Windows and non-Windows executions.[m
[31m-MAVEN_CMD_LINE_ARGS="$MAVEN_CONFIG $@"[m
[31m-export MAVEN_CMD_LINE_ARGS[m
[31m-[m
[31m-WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain[m
[31m-[m
[31m-exec "$JAVACMD" \[m
[31m-  $MAVEN_OPTS \[m
[31m-  -classpath "$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar" \[m
[31m-  "-Dmaven.home=${M2_HOME}" "-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}" \[m
[31m-  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG "$@"[m
[1mdiff --git a/jpa-in-10-steps/mvnw.cmd b/jpa-in-10-steps/mvnw.cmd[m
[1mdeleted file mode 100644[m
[1mindex c8d4337..0000000[m
[1m--- a/jpa-in-10-steps/mvnw.cmd[m
[1m+++ /dev/null[m
[36m@@ -1,182 +0,0 @@[m
[31m-@REM ----------------------------------------------------------------------------[m
[31m-@REM Licensed to the Apache Software Foundation (ASF) under one[m
[31m-@REM or more contributor license agreements.  See the NOTICE file[m
[31m-@REM distributed with this work for additional information[m
[31m-@REM regarding copyright ownership.  The ASF licenses this file[m
[31m-@REM to you under the Apache License, Version 2.0 (the[m
[31m-@REM "License"); you may not use this file except in compliance[m
[31m-@REM with the License.  You may obtain a copy of the License at[m
[31m-@REM[m
[31m-@REM    https://www.apache.org/licenses/LICENSE-2.0[m
[31m-@REM[m
[31m-@REM Unless required by applicable law or agreed to in writing,[m
[31m-@REM software distributed under the License is distributed on an[m
[31m-@REM "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY[m
[31m-@REM KIND, either express or implied.  See the License for the[m
[31m-@REM specific language governing permissions and limitations[m
[31m-@REM under the License.[m
[31m-@REM ----------------------------------------------------------------------------[m
[31m-[m
[31m-@REM ----------------------------------------------------------------------------[m
[31m-@REM Maven Start Up Batch script[m
[31m-@REM[m
[31m-@REM Required ENV vars:[m
[31m-@REM JAVA_HOME - location of a JDK home dir[m
[31m-@REM[m
[31m-@REM Optional ENV vars[m
[31m-@REM M2_HOME - location of maven2's installed home dir[m
[31m-@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands[m
[31m-@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending[m
[31m-@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven[m
[31m-@REM     e.g. to debug Maven itself, use[m
[31m-@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000[m
[31m-@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files[m
[31m-@REM ----------------------------------------------------------------------------[m
[31m-[m
[31m-@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'[m
[31m-@echo off[m
[31m-@REM set title of command window[m
[31m-title %0[m
[31m-@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'[m
[31m-@if "%MAVEN_BATCH_ECHO%" == "on"  echo %MAVEN_BATCH_ECHO%[m
[31m-[m